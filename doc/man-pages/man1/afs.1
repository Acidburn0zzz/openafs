.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH AFS 1 "OpenAFS" "27/Jun/2008" "AFS Command Reference"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
afs \- Introduction to AFS commands
.SH "DESCRIPTION"
AFS provides many commands that enable users and system administrators to
use and customize its features. Many of the commands belong to the
following categories, called \fIcommand suites\fR.
.Ip "backup" 4
Interface for configuring and operating the \s-1AFS\s0 Backup System.
.Ip "bos" 4
Interface to the Basic Overseer (\s-1BOS\s0) Server for administering server
processes and configuration files.
.Ip "fs" 4
Interface for administering access control lists (ACLs), the Cache
Manager, and other miscellaneous file system functions.
.Ip "fstrace" 4
Interface for tracing Cache Manager operations when debugging problems.
.Ip "kas" 4
Interface to the Authentication Server for administering security and
authentication information. This aspect of OpenAFS has been deprecated.
.Ip "pts" 4
Interface to the Protection Server for administering \s-1AFS\s0 \s-1ID\s0 and group
membership information.
.Ip "uss" 4
Interface for automated administration of user accounts.
.Ip "vos" 4
Interface to the Volume Server and Volume Location (\s-1VL\s0) Server for
administering volumes.
.PP
In addition, there are several commands that do not belong to
suites.
.Sh "\s-1AFS\s0 Command Syntax"
\s-1AFS\s0 commands that belong to suites have the following structure:
.PP
\fIcommand_suite\fR \fIoperation_code\fR \fB\-switch\fR <\fIvalue\fR>[+] [\fB\-flag\fR]
Together, the \fIcommand_suite\fR and \fIoperation_code\fR make up the \fIcommand
name\fR.
.PP
The \fIcommand_suite\fR specifies the group of related commands to which the
command belongs, and indicates which command interpreter and server
process perform the command.  \s-1AFS\s0 has several command suites, including
\fBbos\fR, \fBfs\fR, \fBkas\fR, \fBpackage\fR, \fBpts\fR, \fBuss\fR and \fBvos\fR.  Some of
these suites have an interactive mode in which the issuer omits the
\fIoperation_code\fR portion of the command name.
.PP
The \fIoperation_code\fR tells the command interpreter and server process
which action to perform. Most command suites include several operation
codes. The man pages for each command name describe each operation code in
detail, and the \fI\s-1IBM\s0 \s-1AFS\s0 Administration Guide\fR describes how to use them
in the context of performing administrative tasks.
.PP
Several \s-1AFS\s0 commands do not belong to a suite and so their names do not
have a \fIcommand_suite\fR portion. Their structure is otherwise similar to
the commands in the suites.
The term \fIoption\fR refers to both arguments and flags, which are described
in the following sections.
One or more arguments can follow the command name. Arguments specify the
entities on which to act while performing the command (for example, which
server machine, server process, or file). To minimize the potential for
error, provide a command's arguments in the order prescribed in its syntax
definition.
.PP
Each argument has two parts, which appear in the indicated order:
.Ip "\(bu" 4
The \fIswitch\fR specifies the argument's type and is preceded by a hyphen
(\fB\-\fR). For instance, the switch \fB\-server\fR usually indicates that the
argument names a server machine. Switches can often be omitted, subject to
the rules outlined in the section on \fIConditions for Omitting Switches\fR.
.Ip "\(bu" 4
The \fIvalue\fR names a particular entity of the type specified by the
preceding switch. For example, the proper value for a \fB\-server\fR switch is
a server machine name like \f(CWfs3.abc.com\fR. Unlike switches (which have a
required form), values vary depending on what the issuer wants to
accomplish. Values appear surrounded by angle brackets (\f(CW< <\fR >>) in
command descriptions and the online help to show that they are
user-supplied variable information.
.PP
Some arguments accept multiple values, as indicated by trailing plus sign
(\f(CW+\fR) in the command descriptions and online help. How many of a
command's arguments take multiple values, and their ordering with respect
to other arguments, determine when it is acceptable to omit switches. See
the section on \fIConditions for Omitting Switches\fR.
.PP
Some commands have optional as well as required arguments; the command
descriptions and online help show optional arguments in square brackets
(\f(CW[]\fR).
Some commands have one or more flags, which specify the manner in which
the command interpreter and server process perform the command, or what
kind of output it produces. Flags are preceded by hyphens like switches,
but they take no values. Although the command descriptions and online help
generally list a command's flags after its arguments, there is no
prescribed order for flags. They can appear anywhere on the command line
following the operation code, except in between the parts of an
argument. Flags are always optional.
The following example illustrates the different parts of a command that
belongs to an \s-1AFS\s0 command suite.
.PP
.Vb 1
\&   % bos getdate -server fs1.abc.com -file ptserver kaserver
.Ve
where
.Ip "\(bu" 4
\fBbos\fR is the command suite. The \s-1BOS\s0 Server executes most of the commands
in this suite.
.Ip "\(bu" 4
\fBgetdate\fR is the operation code. It tells the \s-1BOS\s0 Server on the specified
server machine (in this case \f(CWfs1.abc.com\fR) to report the modification
dates of binary files in the local \fI/usr/afs/bin\fR directory.
.Ip "\(bu" 4
\f(CW-server fs1.abc.com\fR is one argument, with \fB\-server\fR as the switch and
\f(CWfs1.abc.com\fR as the value. This argument specifies the server machine on
which \s-1BOS\s0 Server is to collect and report binary dates.
.Ip "\(bu" 4
\f(CW-file ptserver kaserver\fR is an argument that takes multiple values. The
switch is \fB\-file\fR and the values are \f(CWptserver\fR and \f(CWkaserver\fR. This
argument tells the \s-1BOS\s0 Server to report the modification dates on the
files \fI/usr/afs/bin/kaserver\fR and \fI/usr/afs/bin/ptserver\fR.
Enter each \s-1AFS\s0 command on a single line (press <Return> only at the end of
the command). Some commands in this document appear broken across multiple
lines, but that is for legibility only.
.PP
Use a space to separate each element on a command line from its
neighbors. Spaces rather than commas also separate multiple values of an
argument.
.PP
In many cases, the issuer of a command can reduce the amount of typing
necessary by using one or both of the following methods:
.Ip "\(bu" 4
Omitting switches.
.Ip "\(bu" 4
Using accepted abbreviations for operation codes, switches (if they are
included at all), and some types of values.
.PP
The following sections explain the conditions for omitting or shortening
parts of the command line. It is always acceptable to type a command in
full, with all of its switches and no abbreviations.
It is always acceptable to type the switch part of an argument, but in
many cases it is not necessary. Specifically, switches can be omitted if
the following conditions are met.
.Ip "\(bu" 4
All of the command's required arguments appear in the order prescribed by
the syntax statement.
.Ip "\(bu" 4
No switch is provided for any argument.
.Ip "\(bu" 4
There is only one value for each argument (but note the important
exception discussed in the following paragraph).
.PP
Omitting switches is possible only because there is a prescribed order for
each command's arguments. When the issuer does not include switches, the
command interpreter relies instead on the order of arguments; it assumes
that the first element after the operation code is the command's first
argument, the next element is the command's second argument, and so
on. The important exception is when a command's final required argument
accepts multiple values. In this case, the command interpreter assumes
that the issuer has correctly provided one value for each argument up
through the final one, so any additional values at the end belong to the
final argument.
.PP
The following list describes the rules for omitting switches from the
opposite perspective: an argument's switch must be provided when any of
the following conditions apply.
.Ip "\(bu" 4
The command's arguments do not appear in the prescribed order.
.Ip "\(bu" 4
An optional argument is omitted but a subsequent optional argument is
provided.
.Ip "\(bu" 4
A switch is provided for a preceding argument.
.Ip "\(bu" 4
More than one value is supplied for a preceding argument (which must take
multiple values, of course); without a switch on the current argument, the
command interpreter assumes that the current argument is another value for
the preceding argument.
Consider again the example command from the section on \fIAn Example Command\fR.
.PP
.Vb 1
\&   % bos getdate -server fs1.abc.com -file ptserver kaserver
.Ve
This command has two required arguments: the server machine name
(identified by the \fB\-server\fR switch) and binary file name (identified by
the \fB\-file\fR switch). The second argument accepts multiple values. By
complying with all three conditions, the issuer can omit the switches:
.PP
.Vb 1
\&   % bos getdate fs1.abc.com ptserver kaserver
.Ve
Because there are no switches, the bos command interpreter relies on the
order of arguments. It assumes that the first element following the
operation code, \f(CWfs1.abc.com\fR, is the server machine name, and that the
next argument, \f(CWptserver\fR, is a binary file name. Then, because the
command's second (and last) argument accepts multiple values, the command
interpreter correctly interprets \f(CWkaserver\fR as an additional value for
it.
.PP
On the other hand, the following is not acceptable because it violates the
first two conditions in the section on \fIConditions for Omitting Switches\fR: even though
there is only one value per argument, the arguments do not appear in the
prescribed order, and a switch is provided for one argument but not the
other.
.PP
.Vb 1
\&   % bos getdate ptserver -server fs1.abc.com
.Ve
This section explains how to abbreviate operation codes, option names,
server machine names, partition names, and cell names. It is not possible
to abbreviate other types of values.
It is acceptable to abbreviate an operation code to the shortest form that
still distinguishes it from the other operation codes in its suite.
.PP
For example, it is acceptable to shorten \fBbos install\fR to \fBbos i\fR
because there are no other operation codes in the \fBbos\fR command suite
that begin with the letter \f(CWi\fR. In contrast, there are several \fBbos\fR
operation codes that start with the letter \f(CWs\fR, so the abbreviations must
be longer to remain unambiguous:
.Ip "\fBbos sa\fR for bos salvage" 4
.Ip "\fBbos seta\fR for bos setauth" 4
.Ip "\fBbos setc\fR for bos setcellname" 4
.Ip "\fBbos setr\fR for bos setrestart" 4
.Ip "\fBbos sh\fR for bos shutdown" 4
.Ip "\fBbos start\fR for bos start" 4
.Ip "\fBbos startu\fR for bos startup" 4
.Ip "\fBbos stat\fR for bos status" 4
.Ip "\fBbos sto\fR for bos stop" 4
.PP
In addition to abbreviations, some operation codes have an \fIalias\fR, a
short form that is not derived by abbreviating the operation code to its
shortest unambiguous form. For example, the alias for the \fBfs setacl\fR
command is \fBfs sa\fR, whereas the shortest unambiguous abbreviation is \fBfs
seta\fR.
.PP
There are two usual reasons an operation code has an alias:
.Ip "\(bu" 4
Because the command is frequently issued, it is convenient to have a form
shorter than the one derived by abbreviating. The \fBfs setacl\fR command is
an example.
.Ip "\(bu" 4
Because the command's name has changed, but users of previous versions of
\s-1AFS\s0 know the former name. For example, \fBbos listhosts\fR has the alias
\fBbos getcell\fR, its former name.  It is acceptable to abbreviate aliases
to their shortest unambiguous form (for example, \fBbos getcell\fR to \fBbos
getc\fR).
.PP
Even if an operation code has an alias, it is still acceptable to use the
shortest unambiguous form. Thus, the \fBfs setacl\fR command has three
acceptable forms: \fBfs setacl\fR (the full form), \fBfs seta\fR (the shortest
abbreviation), and \fBfs sa\fR (the alias).
It is acceptable to shorten a switch or flag to the shortest form that
distinguishes it from the other switches and flags for its operation
code. It is often possible to omit switches entirely, subject to the
conditions listed in the section on \fIConditions for Omitting Switches\fR.
\s-1AFS\s0 server machines must have fully-qualified Internet-style host names
(for example, \f(CWfs1.abc.com\fR), but it is not always necessary to type the
full name on the command line. \s-1AFS\s0 commands accept unambiguous shortened
forms, but depend on the cell's name service (such as the Domain Name
Service) or a local host table to resolve a shortened name to the
fully-qualified equivalent when the command is issued.
.PP
Most commands also accept the dotted decimal form of the machine's \s-1IP\s0
address as an identifier.
Partitions that house \s-1AFS\s0 volumes must have names of the form
\fI/vicep\fIx\fR\fR or \fI/vicep\fIxx\fR\fR, where the variable final portion is one
or two lowercase letters. By convention, the first server partition
created on a file server machine is called \fI/vicepa\fR, the second
\fI/vicepb\fR, and so on.  The \fIOpenAFS QuickStart Guide\fR explains how to
configure and name a file server machine's partitions in preparation for
storing \s-1AFS\s0 volumes on them.
.PP
When issuing \s-1AFS\s0 commands, you can abbreviate a partition name using any
of the following forms:
.PP
.Vb 2
\&   /vicepa     =     vicepa      =      a      =      0
\&   /vicepb     =     vicepb      =      b      =      1
.Ve
After /vicepz (for which the index is 25) comes
.PP
.Vb 2
\&   /vicepaa    =     vicepaa     =      aa     =      26
\&   /vicepab    =     vicepab     =      ab     =      27
.Ve
and so on through
.PP
.Vb 1
\&   /vicepiv    =     vicepiv     =      iv     =      255
.Ve
\fI/vicepiv\fR is the last permissible \s-1AFS\s0 partition name. In practice it
will not work well; stopping with \fI/vicepiu\fR is highly recommended.
A cell's full name usually matches its Internet domain name (such as
\fBstateu.edu\fR for the State University or \f(CWabc.com\fR for \s-1ABC\s0
Corporation). Some \s-1AFS\s0 commands accept unambiguous shortened forms,
usually with respect to the local \fI/usr/vice/etc/CellServDB file\fR but
sometimes depending on the ability of the local name service to resolve
the corresponding domain name.
To display online help for \s-1AFS\s0 commands that belong to suites, use the
\fBhelp\fR and \fBapropos\fR operation codes.  A \fB\-help\fR flag is also available
on every almost every \s-1AFS\s0 command.
.PP
The online help entry for a command consists of two or three lines:
.Ip "\(bu" 4
The first line names the command and briefly describes what it does.
.Ip "\(bu" 4
If the command has aliases, they appear on the next line.
.Ip "\(bu" 4
The final line, which begins with the string \f(CWUsage:\fR, lists the
command's options in the prescribed order; online help entries use the
same typographical symbols (brackets and so on) as this documentation.
.PP
If no operation code is specified, the \fBhelp\fR operation code displays the
first line (short description) for every operation code in the suite:
.PP
.Vb 1
\&   % <command_suite> help
.Ve
If the issuer specifies one or more operation codes, the \fBhelp\fR operation
code displays each command's complete online entry (short description,
alias if any, and syntax):
.PP
.Vb 1
\&   % <command_suite> help <operation_code>+
.Ve
The \fB\-help\fR flag displays a command's syntax but not the short
description or alias:
.PP
.Vb 1
\&   % <command_name> -help
.Ve
The apropos operation code displays the short description of any command
in a suite whose operation code or short description includes the
specified keyword:
.PP
.Vb 1
\&   % <command_suite> apropos "<help string>"
.Ve
The following example command displays the complete online help entry for
the \fBfs setacl\fR command:
.PP
.Vb 5
\&   % fs help setacl
\&   fs setacl: set access control list
\&   aliases: sa
\&   Usage: fs setacl -dir <directory>+ -acl <access list entries>+
\&   [-clear] [-negative] [-id] [-if] [-help]
.Ve
To see only the syntax statement, use the \fB\-help\fR flag:
.PP
.Vb 3
\&   % fs setacl -help
\&   Usage: fs setacl -dir <directory>+ -acl <access list entries>+
\&   [-clear] [-negative] [-id] [-if] [-help]
.Ve
In the following example, a user wants to display the quota for her home
volume. She knows that the relevant command belongs to the \fBfs\fR suite,
but cannot remember the operation code. She uses \fBquota\fR as the keyword:
.PP
.Vb 4
\&   % fs apropos quota
\&   listquota: list volume quota
\&   quota: show volume quota usage
\&   setquota: set volume quota
.Ve
The following illustrates the error message that results if no command
name or short description contains the keyword:
.PP
.Vb 2
\&   % fs apropos "list quota"
\&   Sorry, no commands found
.Ve
.SH "PRIVILEGE REQUIRED"
Many AFS commands require one or more types of administrative
privilege. See the reference page for each command.
.SH "SEE ALSO"
the \fIafsd(8)\fR manpage,
the \fIafsmonitor(1)\fR manpage,
the \fIbackup(8)\fR manpage,
the \fIbos(8)\fR manpage,
the \fIbosserver(8)\fR manpage,
the \fIbuserver(8)\fR manpage,
the \fIbutc(8)\fR manpage,
the \fIdlog(1)\fR manpage,
the \fIdpass(1)\fR manpage,
the \fIfileserver(8)\fR manpage,
the \fIfms(8)\fR manpage,
the \fIfs(1)\fR manpage,
the \fIfstrace(8)\fR manpage,
the \fIkadb_check(8)\fR manpage,
the \fIkas(8)\fR manpage,
the \fIkaserver(8)\fR manpage,
the \fIkdb(8)\fR manpage,
the \fIklog(1)\fR manpage,
the \fIknfs(1)\fR manpage,
the \fIkpasswd(1)\fR manpage,
the \fIkpwvalid(8)\fR manpage,
the \fIpackage(1)\fR manpage,
the \fIpagsh(1)\fR manpage,
the \fIprdb_check(8)\fR manpage,
the \fIpts(1)\fR manpage,
the \fIptserver(8)\fR manpage,
the \fIrxdebug(1)\fR manpage,
the \fIsalvager(8)\fR manpage,
the \fIscout(1)\fR manpage,
the \fIsys(1)\fR manpage,
the \fItokens(1)\fR manpage,
the \fItranslate_et(1)\fR manpage,
the \fIunlog(1)\fR manpage,
the \fIup(1)\fR manpage,
the \fIupclient(8)\fR manpage,
the \fIupserver(8)\fR manpage,
the \fIuss(8)\fR manpage,
the \fIvldb_check(8)\fR manpage,
the \fIvlserver(8)\fR manpage,
the \fIvolinfo(8)\fR manpage,
the \fIvolserver(8)\fR manpage,
the \fIvos(1)\fR manpage,
the \fIxfs_size_check(8)\fR manpage,
the \fIxstat_cm_test(1)\fR manpage,
the \fIxstat_fs_test(1)\fR manpage
.SH "COPYRIGHT"
IBM Corporation 2000. <http://www.ibm.com/> All Rights Reserved.
.PP
This documentation is covered by the IBM Public License Version 1.0.  It was
converted from HTML to POD by software written by Chas Williams and Russ
Allbery, based on work by Alf Wachsmann and Elizabeth Cassell.

.rn }` ''
.IX Title "AFS 1"
.IX Name "afs - Introduction to AFS commands"

.IX Header "NAME"

.IX Header "DESCRIPTION"

.IX Item "backup"

.IX Item "bos"

.IX Item "fs"

.IX Item "fstrace"

.IX Item "kas"

.IX Item "pts"

.IX Item "uss"

.IX Item "vos"

.IX Subsection "\s-1AFS\s0 Command Syntax"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\fBbos sa\fR for bos salvage"

.IX Item "\fBbos seta\fR for bos setauth"

.IX Item "\fBbos setc\fR for bos setcellname"

.IX Item "\fBbos setr\fR for bos setrestart"

.IX Item "\fBbos sh\fR for bos shutdown"

.IX Item "\fBbos start\fR for bos start"

.IX Item "\fBbos startu\fR for bos startup"

.IX Item "\fBbos stat\fR for bos status"

.IX Item "\fBbos sto\fR for bos stop"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Header "PRIVILEGE REQUIRED"

.IX Header "SEE ALSO"

.IX Header "COPYRIGHT"

