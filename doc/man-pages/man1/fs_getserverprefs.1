.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH FS_GETSERVERPREFS 1 "OpenAFS" "1/Mar/2006" "AFS Command Reference"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
fs getserverprefs \- Displays preference ranks for file servers or VL servers
.SH "SYNOPSIS"
\fBfs getserverprefs\fR <<\ [\fB\-file\fR\ <\fIoutput\ to\ named\ file\fR] >>>
    [\fB\-numeric\fR] [\fB\-vlservers\fR] [\fB\-help\fR]
.PP
\fBfs gets\fR <<\ [\fB\-f\fR\ <\fIoutput\ to\ named\ file\fR] >>> [\fB\-n\fR] [\fB\-v\fR] [\fB\-h\fR]
.PP
\fBfs gp\fR <<\ [\fB\-f\fR\ <\fIoutput\ to\ named\ file\fR] >>> [\fB\-n\fR] [\fB\-v\fR] [\fB\-h\fR]
.SH "DESCRIPTION"
The \fBfs getserverprefs\fR command displays preference ranks for file server
machine interfaces (file server machines run the \fBfs\fR process) or, if the
\fB\-vlserver\fR flag is provided, for Volume Location (VL) Server machines
(which run the \fBvlserver\fR process). For file server machines, the Cache
Manager tracks up to 15 interfaces per machine and assigns a separate rank
to each interface. The ranks indicate the order in which the local Cache
Manager attempts to contact the interfaces of machines that are housing a
volume when it needs to fetch data from the volume. For VL Server
machines, the ranks indicate the order in which the Cache Manager attempts
to contact a cell's VL Servers when requesting VLDB information. For both
types of rank, lower integer values are more preferred.
.PP
The Cache Manager stores ranks in kernel memory. Once set, a rank persists
until the machine reboots, or until the \fBfs setserverprefs\fR command is
used to change it. The reference page for the \fBfs setserverprefs\fR command
explains how the Cache Manager sets default ranks, and how to use that
command to change the default values.
.PP
Default VL Server ranks range from 10,000 to 10,126, and the Cache Manager
assigns them to every machine listed in its copy of the
\fI/usr/vice/etc/CellServDB\fR file. When the Cache Manager needs to fetch
VLDB information from a cell, it compares the ranks for the VL Server
machines belonging to that cell, and attempts to contact the VL Server
with the lowest integer rank. If the Cache Manager cannot reach the VL
Server (because of server process, machine or network outage), it tries to
contact the VL Server with the next lowest integer rank, and so on. If all
of a cell's VL Server machines are unavailable, the Cache Manager cannot
fetch data from the cell.
.PP
Default file server ranks range from 5,000 to 40,000, excluding the range
used for VL Servers (10,000 to 10,126); the maximum possible rank is
65,534. When the Cache Manager needs to fetch data from a volume, it
compares the ranks for the interfaces of machines that house the volume,
and attempts to contact the interface that has the lowest integer rank. If
it cannot reach the \fBfileserver\fR process via that interface (because of
server process, machine or network outage), it tries to contact the
interface with the next lowest integer rank, and so on. If it cannot reach
any of the interfaces for machines that house the volume, it cannot fetch
data from the volume.
.PP
For both file server machines and VL Server machines, it is possible for a
machine or interface in a foreign cell to have the same rank as a machine
or interface in the local cell. This does not present a problem, because
the Cache Manager only ever compares ranks for machines belonging to one
cell at a time.
.SH "OPTIONS"
.Ip "\fB\-file\fR <\fIoutput file\fR>" 4
Specifies the full pathname of a file to which to write the preference
ranks. If the specified file already exists, the command overwrites its
contents. If the pathname is invalid, the command fails. If this argument
is not provided, the preference ranks appear on the standard output
stream.
.Ip "\fB\-numeric\fR" 4
Displays the \s-1IP\s0 addresses of file server machine interfaces or \s-1VL\s0 Server
machines, rather than their hostnames. If this argument is not provided,
the \fBfs\fR command interpreter has the \s-1IP\s0 addresses translated to hostnames
such as \f(CWfs1.abc.com\fR.
.Ip "\fB\-vlservers\fR" 4
Displays preference ranks for \s-1VL\s0 Server machines rather than file server
machine interfaces.
.Ip "\fB\-help\fR" 4
Prints the online help for this command. All other valid options are
ignored.
.SH "OUTPUT"
The output consists of a separate line for each file server machine
interface or VL Server machine, pairing the machine's hostname or IP
address with its rank. The Cache Manager stores IP addresses in its kernel
list of ranks, but the command by default identifies interfaces by
hostname, by calling a translation routine that refers to either the
cell's name service (such as the Domain Name Server) or the local host
table. If an IP address appears in the output, it is because the
translation attempt failed. To bypass the translation step and display IP
addresses rather than hostnames, include the \fB\-numeric\fR flag. This can
significantly speed the production of output.
.PP
By default, the command writes to the standard output stream. Use the
\fB\-file\fR argument to write the output to a file instead.
.SH "EXAMPLES"
The following example displays the local Cache Manager's preference ranks
for file server machines. The local machine belongs to the AFS cell named
\fBabc.com\fR, and in this example the ranks of file server machines in its
local cell are lower than the ranks of file server machines from the
foreign cell, \f(CWdef.com\fR. It is not possible to translate the IP addresses
of two machines on the 138.255 network.
.PP
.Vb 9
\&   % fs getserverprefs
\&   fs2.abc.com           20007
\&   fs3.abc.com           30002
\&   fs1.abc.com           20011
\&   fs4.abc.com           30010
\&   server1.def.com       40002
\&   138.255.33.34         40000
\&   server6.def.com       40012
\&   138.255.33.37         40005
.Ve
The following example shows hows the output displays IP addresses when the
\fB\-numeric\fR flag is included, and illustrates how network proximity
determines default ranks (as described on the \fBfs setserverprefs\fR
reference page). The local machine has IP address 192.12.107.210, and the
two file server machines on its subnetwork have ranks of 20,007 and
20,011. The two file server machines on a different subnetwork of the
local machine's network have higher ranks, 30,002 and 30,010, whereas the
ranks of the remaining machines range from 40,000 to 40,012 because they
are in a completely different network.
.PP
.Vb 9
\&   % fs getserverprefs -numeric
\&   192.12.107.214          20007
\&   192.12.105.99           30002
\&   192.12.107.212          20011
\&   192.12.105.100          30010
\&   138.255.33.41           40002
\&   138.255.33.34           40000
\&   138.255.33.36           40012
\&   138.255.33.37           40005
.Ve
The example shows how the \fB\-vlservers\fR flag displays preference ranks for
VL Server machines:
.PP
.Vb 4
\&   % fs getserverprefs -vlservers
\&   fs2.abc.com            10052
\&   fs3.abc.com            10113
\&   fs1.abc.com            10005
.Ve
.SH "PRIVILEGE REQUIRED"
None
.SH "SEE ALSO"
the \fIfs_setserverprefs(1)\fR manpage
.SH "COPYRIGHT"
IBM Corporation 2000. <http://www.ibm.com/> All Rights Reserved.
.PP
This documentation is covered by the IBM Public License Version 1.0.  It was
converted from HTML to POD by software written by Chas Williams and Russ
Allbery, based on work by Alf Wachsmann and Elizabeth Cassell.

.rn }` ''
.IX Title "FS_GETSERVERPREFS 1"
.IX Name "fs getserverprefs - Displays preference ranks for file servers or VL servers"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Item "\fB\-file\fR <\fIoutput file\fR>"

.IX Item "\fB\-numeric\fR"

.IX Item "\fB\-vlservers\fR"

.IX Item "\fB\-help\fR"

.IX Header "OUTPUT"

.IX Header "EXAMPLES"

.IX Header "PRIVILEGE REQUIRED"

.IX Header "SEE ALSO"

.IX Header "COPYRIGHT"

