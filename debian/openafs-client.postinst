#! /bin/sh
# postinst script for openafs

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>

case "$1" in
    configure)

	test -d /afs || mkdir /afs
    . /usr/share/debconf/confmodule

	db_version 2.0

	db_get openafs-client/thiscell
	echo $RET >/etc/openafs/ThisCell
	THISCELL=$RET

	if test -f /etc/openafs/CellServDB; then :
	    else cp /usr/share/doc/openafs-client/examples/CellServDB \
	      /etc/openafs
	    fi
	if grep  -q -F $RET /etc/openafs/CellServDB ; then :
		else db_input critical  openafs-client/cell-info || true
	    db_input high openafs-client/run-client ||true
	    db_go
	    db_get openafs-client/cell-info
	    if [ "x$RET" != "x" ] ; then
		echo \>$THISCELL >/etc/openafs/CellServDB.new
		for hname in $RET ; do 
		    host $hname |perl -anle \
		      'print "$F[2] # $F[0]" if $F[1] eq "A"' \
		      >>/etc/openafs/CellServDB.new
		    done
		    cat /etc/openafs/CellServDB.new \
		      /etc/openafs/CellServDB  >/etc/openafs/CellServDB.tmp
		    mv /etc/openafs/CellServDB.tmp \
		      /etc/openafs/CellServDB
		    rm /etc/openafs/CellServDB.new
		fi
	    fi
		    
	db_get openafs-client/cachesize
	echo /afs:/var/cache/openafs:$RET >/etc/openafs/cacheinfo

	db_get openafs-client/run-client
	echo AFS_CLIENT=$RET >/etc/openafs/afs.conf.client

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


